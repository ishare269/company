<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stone.company.persistence.MailTemplateMapper">
	<resultMap type="com.stone.company.domain.MailTemplate" id="returnMailTemplateMap">
		<id property="id" column="id" />
		<result property="uid" column="uid" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="createtime" column="createtime" />
	</resultMap>

	<insert id="insertMailTemplate" parameterType="com.stone.company.domain.MailTemplate">
		insert into
		mailtemplate(id,uid,subject,`to`,content)
		values(#{id},#{uid},#{subject},#{to},#{content})
	</insert>

	<update id="updateMailTemplate" parameterType="com.stone.company.domain.MailTemplate">
		update mailtemplate
		<set>
			<if test="null!=subject">subject = #{subject},</if>
			<if test="null!=to">`to` = #{to},</if>
			<if test="null!=content">content = #{content},</if>
		</set>
		where id = #{id} and uid = #{uid}
	</update>

	<delete id="deleteMailTemplete">
		delete from mailtemplate
		<where>
			<if test="uid==null">id = #{id}</if>
			<if test="id==null">uid = #{uid}</if>
		</where>
	</delete>

	<select id="findById" resultType="com.stone.company.domain.MailTemplate">
		select * from mailtemplate
		where id = #{id}
	</select>

	<select id="queryByUid" resultMap="returnMailTemplateMap">
		select * from mailtemplate
		where uid = #{uid}
	</select>
</mapper>